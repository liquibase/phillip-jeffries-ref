#####################################################################
#  GitHub Action to perform manual deployment of database changes
#  using Liquibase IO
#####################################################################
name: 'Liquibase IO Manual Deployment Workflow'
run-name: Deployment of ${{github.ref}} to ${{ inputs.environment }} by ${{ github.actor }}

on:
  workflow_dispatch:
    # Following are the inputs received via the GitHub Actions Run workflow dialog
    inputs:
      # The type 'environment' will automatically pull in the environments created in Settings->Environments
      environment:
        description: 'Environment to deploy to'
        type: environment
        required: true
      # For more info on log level, see: https://docs.liquibase.com/parameters/log-level.html
      log-level:
        description: 'Liquibase log level'
        required: false
        default: 'INFO'
        type: choice
        options: [ 'SEVERE','WARNING','INFO','FINE','OFF' ]

####################################################################
#  Set up the environment
#####################################################################
env:

  LIQUIBASE_IO_API_URL: "https://demo.liquibase.xyz/api/"

  IO_TOKEN_VIEWER: ${{ secrets.IO_TOKEN_VIEWER }}

  IO_TOKEN_OPERATOR: ${{ secrets.IO_TOKEN_OPERATOR }}

jobs:
  ####################################################################
  # Initialization runs first because it has no 'needs' value.
  ####################################################################
  init:
    name: Initialization
    # This runs on a self-hosted runner with Liquibase preinstalled.
    runs-on: [self-hosted]
    outputs:
      environment: ${{ steps.set-environment.outputs.environment }}

    steps:
      # Cancel any previous runs that are not completed for this workflow
      - name: Cancel previous workflow
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      # Determine the environment based on the branch(es) that triggered this workflow.
      # Output "DEV", "QA", or "PROD" to $GITHUB_OUTPUT where job output parameters are
      # shared between jobs.
      - name: Set Environment
        id: set-environment
        run: |
          echo "environment=DEV" >> $GITHUB_OUTPUT
          if [[ "${{ inputs.environment }}" == QA ]]; then
            echo "environment=QA" >> $GITHUB_OUTPUT
          fi
          if [[ "${{ inputs.environment }}" == PROD ]]; then
            echo "environment=PROD" >> $GITHUB_OUTPUT
          fi


  ####################################################################
  #  Perform the Database change control operations specified
  #  in the flowfile. In this case, deploy the database changes.
  #####################################################################
  liquibase-deployment:
    name: Database Deployment
    needs: [init]
    runs-on: [self-hosted]

    environment: ${{needs.init.outputs.environment}}

    steps:
      # Create a job from the workflow using the LBIO CLI:
      - name: Run deployment
        run: |
          echo 'Running workflow as job with curl API call (stubbed)...'
#          lbio workflow run {id} [--dispatch]